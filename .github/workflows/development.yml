name: Flask App Staging CI/CD

on:
  push:
    branches:
      - development
  workflow_dispatch:

jobs:
  build:
    if: github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.11

      - name: Install dependencies
        run: pip install --no-cache-dir -r requirements.txt

      - name: Install pytest
        run: pip install pytest
  
      - name: Run tests
        run: pytest
        env:
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
        
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/flask-app:${{ github.sha }}

  validate:
    if: github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      
      - name: Run ansible-lint
        uses: ansible-community/ansible-lint-action@v6.0.2
        with:
          args: "ansible" 

  deploy_to_minikube:
    if: github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest
    needs: [validate]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      - name: Start Minikube
        run: minikube start

      - name: Configure kubectl for Minikube
        run: minikube kubectl -- get pods

      - name: Load Docker image into Minikube
        run: eval $(minikube docker-env) && docker tag ${{ secrets.DOCKERHUB_USERNAME }}/flask-app:${{ github.sha }} flask-app:minikube && docker save flask-app:minikube | (eval $(minikube docker-env) && docker load)

      - name: Deploy Flask app to Minikube
        run: kubectl apply -f kubernetes/deployment.yaml

      - name: Expose Flask app service
        run: kubectl expose deployment flask-app --type=NodePort --port=80

      - name: Deploy Ingress
        run: kubectl apply -f kubernetes/ingress.yaml

      - name: Show Minikube IP and Port
        run: minikube service flask-app --url